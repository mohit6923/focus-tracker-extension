let lastActiveTab = null; let lastActivityTime = null; chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) { if (request.toggleFocus) { if (request.isFocusModeOn) { startFocusSession(); } else { stopFocusSession(); } } }); function startFocusSession() { lastActivityTime = new Date().getTime(); chrome.storage.local.set({ focusSessionData: {} }); chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) { if (tabs.length > 0) { lastActiveTab = tabs[0]; } }); chrome.tabs.onActivated.addListener(handleTabActivation); chrome.tabs.onUpdated.addListener(handleTabUpdate); } function stopFocusSession() { recordTime(); lastActiveTab = null; lastActivityTime = null; chrome.tabs.onActivated.removeListener(handleTabActivation); chrome.tabs.onUpdated.removeListener(handleTabUpdate); } function handleTabActivation(activeInfo) { recordTime(); chrome.tabs.get(activeInfo.tabId, function (tab) { if(tab) { lastActiveTab = tab; } }); } function handleTabUpdate(tabId, changeInfo, tab) { if (tab.active && changeInfo.url) { recordTime(); lastActiveTab = tab; } } function recordTime() { if (lastActiveTab && lastActivityTime) { const now = new Date().getTime(); const timeSpent = now - lastActivityTime; if (lastActiveTab.url && lastActiveTab.url.startsWith("http")) { const url = new URL(lastActiveTab.url); const hostname = url.hostname; chrome.storage.local.get("focusSessionData", function (data) { let sessionData = data.focusSessionData || {}; if (sessionData[hostname]) { sessionData[hostname] += timeSpent; } else { sessionData[hostname] = timeSpent; } chrome.storage.local.set({ focusSessionData: sessionData }); }); } } lastActivityTime = new Date().getTime(); }
